{"version":3,"sources":["Logger.js","index.js"],"names":["Logger","id","el","document","getElementById","innerHTML","data","message","length","JSON","stringify","wasm_url","getAttribute","logger","importObj","module","env","_Znaj","x","WebAssembly","instantiateStreaming","fetch","then","res","arr","typed_arr","Int32Array","instance","exports","memory","buffer","set","log","_sum","offset","_duplicate_arr"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAAqBA;AACjB,kBAAYC,EAAZ,EAAgB;AAAA;;AACZ,SAAKC,EAAL,GAAUC,QAAQ,CAACC,cAAT,CAAwBH,EAAxB,CAAV;AACA,SAAKC,EAAL,CAAQG,SAAR,GAAoB,EAApB;AACH;;;;wBAEGC,MAAoB;AAAA,UAAdC,OAAc,uEAAJ,EAAI;;AACpB,UAAGA,OAAO,CAACC,MAAR,GAAiB,CAApB,EAAuB;AACnBD,QAAAA,OAAO,IAAI,GAAX;AACH;;AAED,WAAKL,EAAL,CAAQG,SAAR,mBAA6BE,OAA7B,cAAwCE,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAxC;AACH;;;;;;;;;;ACZL;;;;AAEA,IAAMK,QAAQ,GAAGR,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCQ,YAAhC,CAA6C,KAA7C,CAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAMC,MAAM,GAAG,IAAIb,eAAJ,CAAW,KAAX,CAAf;AAEA,IAAMc,SAAS,GAAG;AACdC,EAAAA,MAAM,EAAE,EADM;AAEdC,EAAAA,GAAG,EAAE;AACDC,IAAAA,KAAK,EAAE,eAACC,CAAD,EAAO;AACV,aAAO,GAAP;AACH;AAHA;AAFS,CAAlB;AASAC,WAAW,CAACC,oBAAZ,CAAiCC,KAAK,CAACV,QAAD,CAAtC,EAAkDG,SAAlD,EACKQ,IADL,CACU,UAAAC,GAAG,EAAI;AACT,MAAMC,GAAG,GAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,EAAiB,CAAjB,EAAmB,EAAnB,CAAZ;AACA,MAAIC,SAAS,GAAG,IAAIC,UAAJ,CAAeH,GAAG,CAACI,QAAJ,CAAaC,OAAb,CAAqBC,MAArB,CAA4BC,MAA3C,EAAmD,CAAnD,EAAsDN,GAAG,CAAChB,MAA1D,CAAhB;AACAiB,EAAAA,SAAS,CAACM,GAAV,CAAcP,GAAd;AACAX,EAAAA,MAAM,CAACmB,GAAP,CAAWP,SAAX,EAAsB,uBAAtB;AACAZ,EAAAA,MAAM,CAACmB,GAAP,CAAWT,GAAG,CAACI,QAAJ,CAAaC,OAAb,CAAqBK,IAArB,CAA0B,CAA1B,EAA6BR,SAAS,CAACjB,MAAvC,CAAX,EAA2D,qBAA3D;;AAEA,MAAM0B,MAAM,GAAGX,GAAG,CAACI,QAAJ,CAAaC,OAAb,CAAqBO,cAArB,CAAoC,CAApC,EAAuCV,SAAS,CAACjB,MAAjD,CAAf;;AACAiB,EAAAA,SAAS,GAAG,IAAIC,UAAJ,CAAeH,GAAG,CAACI,QAAJ,CAAaC,OAAb,CAAqBC,MAArB,CAA4BC,MAA3C,EAAmDI,MAAnD,EAA2DT,SAAS,CAACjB,MAAV,GAAmB,CAA9E,CAAZ;AACAK,EAAAA,MAAM,CAACmB,GAAP,CAAWP,SAAX,EAAsB,0CAAtB;AACAZ,EAAAA,MAAM,CAACmB,GAAP,CAAWT,GAAG,CAACI,QAAJ,CAAaC,OAAb,CAAqBK,IAArB,CAA0BC,MAA1B,EAAkCT,SAAS,CAACjB,MAA5C,CAAX,EAAgE,qBAAhE;AACH,CAZL","file":"src.e31bb0bc.js","sourceRoot":"..\\src","sourcesContent":["export default class Logger {\r\n    constructor(id) {\r\n        this.el = document.getElementById(id);\r\n        this.el.innerHTML = '';\r\n    }\r\n\r\n    log(data, message = \"\") {\r\n        if(message.length > 0) {\r\n            message += \":\";\r\n        }\r\n\r\n        this.el.innerHTML += `<pre>${message} ${JSON.stringify(data)}</pre>`;\r\n    }\r\n}","import Logger from './Logger';\r\n\r\nconst wasm_url = document.getElementById('wasm').getAttribute('src');\r\n\r\n/*\r\nint sum(int*arr, unsigned int l) {\r\n  int r = 0;\r\n  for (int i = 0; i < l; i++) {\r\n    r += arr[i];\r\n  }\r\n  return r;\r\n}\r\n\r\nint*duplicate_arr(int*arr, unsigned int l) {\r\n  int*new_arr = new int[l*2];\r\n  for (unsigned int i = 0; i < l*2; i+=2) {\r\n    new_arr[i] = arr[i / 2];\r\n    new_arr[i+1] = arr[i / 2] * 2;\r\n  }\r\n  return new_arr;\r\n}\r\n */\r\nconst logger = new Logger('log');\r\n\r\nconst importObj = {\r\n    module: {},\r\n    env: {\r\n        _Znaj: (x) => {\r\n            return 120;\r\n        }\r\n    }\r\n};\r\n\r\nWebAssembly.instantiateStreaming(fetch(wasm_url), importObj)\r\n    .then(res => {\r\n        const arr = [1,2,3,4,5,6,7,8,9,10];\r\n        let typed_arr = new Int32Array(res.instance.exports.memory.buffer, 0, arr.length);\r\n        typed_arr.set(arr);\r\n        logger.log(typed_arr, 'Типизированный маccив');\r\n        logger.log(res.instance.exports._sum(0, typed_arr.length), 'Сумма его элементов');\r\n\r\n        const offset = res.instance.exports._duplicate_arr(0, typed_arr.length);\r\n        typed_arr = new Int32Array(res.instance.exports.memory.buffer, offset, typed_arr.length * 2);\r\n        logger.log(typed_arr, 'Новый массив возвращенный из C++ функции');\r\n        logger.log(res.instance.exports._sum(offset, typed_arr.length), 'Сумма его элементов');\r\n    });"]}