{"version":3,"sources":["js/Logger.js","js/Wasm.js","js/index.js"],"names":["Logger","constructor","id","el","document","getElementById","innerHTML","log","data","message","length","JSON","stringify","Wasm","_buffer","_buffer_offset","_functions","init","buffer","functions","call","f_name","args","r_type","map","val","array","Array","isArray","arr","create_typed_array","type","byteLength","Object","values","array_types","some","byteOffset","matrix","pointers","sub_arr","Error","result","to_array","from","malloc","size","Int8Array","Uint8Array","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","BigInt64Array","BigUint64Array","offset","array_or_length","toLowerCase","keys","join","typed_array","set","url","importObj","wasm","env","entries","reduce","res","name","value","bind","WebAssembly","instantiateStreaming","fetch","then","r","catch","response","arrayBuffer","bytes","instantiate","instance","exports","memory","key","wasm_url","getAttribute","logger","module","w","console","new_arr"],"mappings":"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","file":"js.00a46daa.js","sourceRoot":"..\\src","sourcesContent":["export default class Logger {\r\n    constructor(id) {\r\n        this.el = document.getElementById(id);\r\n        this.el.innerHTML = '';\r\n    }\r\n\r\n    log(data, message = \"\") {\r\n        if(message.length > 0) {\r\n            message += \":\";\r\n        }\r\n\r\n        this.el.innerHTML += `<pre>${message} ${JSON.stringify(data)}</pre>`;\r\n    }\r\n}","class Wasm {\r\n    _buffer;\r\n    _buffer_offset = 0;\r\n    _functions;\r\n\r\n    constructor() {\r\n        //\r\n    }\r\n\r\n    init(data) {\r\n        this._buffer = data.buffer;\r\n        this._functions = data.functions;\r\n        return this;\r\n    }\r\n\r\n    call(f_name, args, r_type = {}) {\r\n        args = args.map(val => {\r\n            if (typeof val === 'number') {\r\n                return val;\r\n            } else if (val.array && Array.isArray(val.array)) {\r\n                const arr = create_typed_array(val.type, this._buffer, this._buffer_offset, val.array);\r\n                this._buffer_offset += arr.byteLength;\r\n                return this._buffer_offset - arr.byteLength;\r\n            } else if(val.array && Object.values(array_types).some(type => val.array.constructor === type)) {\r\n                return val.array.byteOffset;\r\n            } else if (val.matrix) {\r\n                const pointers = val.matrix.map( sub_arr => {\r\n                    const arr = create_typed_array(val.type, this._buffer, this._buffer_offset, sub_arr);\r\n                    this._buffer_offset += arr.byteLength;\r\n                    return this._buffer_offset - arr.byteLength;\r\n                });\r\n                const arr = create_typed_array(val.type, this._buffer, this._buffer_offset, pointers);\r\n                this._buffer_offset += arr.byteLength;\r\n                return this._buffer_offset - arr.byteLength;\r\n            }\r\n\r\n            throw new Error(`Unsupported variable type`)\r\n        });\r\n\r\n        let result = this._functions[f_name](...args);\r\n        if (r_type.type && r_type.length) {\r\n            result = create_typed_array(r_type.type, this._buffer, result, r_type.length);\r\n            if (r_type.to_array) {\r\n                result = Array.from(result);\r\n            }\r\n        }\r\n\r\n        return result\r\n    }\r\n\r\n    malloc(size) {\r\n        this._buffer_offset += size;\r\n        return this._buffer_offset - size;\r\n    }\r\n}\r\n\r\nconst array_types = {\r\n    'int8': Int8Array,\r\n    'uint8': Uint8Array,\r\n    'int16': Int16Array,\r\n    'uint16': Uint16Array,\r\n    'int32': Int32Array,\r\n    'uint32': Uint32Array,\r\n    'float32': Float32Array,\r\n    'float64': Float64Array,\r\n    'bigint64': BigInt64Array,\r\n    'biguint64': BigUint64Array,\r\n};\r\n\r\nconst create_typed_array = (type, buffer, offset = 0, array_or_length) => {\r\n    type = array_types[type.toLowerCase()];\r\n\r\n    if (!type) {\r\n        throw new Error(`Array types: ${Object.keys(array_types).join(', ')}. ${type.toLowerCase()} not included`)\r\n    }\r\n\r\n    const typed_array = new type(buffer, offset, Array.isArray(array_or_length) ? array_or_length.length : array_or_length);\r\n    if (array_or_length.length && array_or_length.length > 0) {\r\n        typed_array.set(array_or_length);\r\n    }\r\n    return typed_array;\r\n};\r\n\r\nexport default async (url, importObj = {}) => {\r\n    const wasm = new Wasm();\r\n\r\n    if (importObj.functions) {\r\n        if (!importObj.env) {\r\n            importObj.env = {}\r\n        }\r\n\r\n        const functions = Object.entries(importObj.functions).reduce((res, [name, value]) => {\r\n            if (typeof value === 'string' && wasm[value]) {\r\n                res[name] = wasm[value].bind(wasm);\r\n            }\r\n            if (typeof value === 'function') {\r\n                res[name] = value\r\n            }\r\n            return res;\r\n        }, {});\r\n\r\n        importObj.env = {...functions, ...importObj.env};\r\n    }\r\n\r\n    const data = await WebAssembly.instantiateStreaming(fetch(url), importObj)\r\n        .then(r => r)\r\n        .catch(() => {\r\n            return fetch(url)\r\n                .then(response => response.arrayBuffer())\r\n                .then(bytes => WebAssembly.instantiate(bytes, importObj))\r\n                .then(r => r);\r\n        });\r\n\r\n    return wasm.init({\r\n        // module: data.module,\r\n        buffer: data.instance.exports.memory.buffer,\r\n        functions: Object.entries(data.instance.exports).reduce((res, [key, value]) => {\r\n            return key === 'memory' ? res : {...res, ...{[key]: value}};\r\n        }, {})\r\n    });\r\n}","import Logger from './Logger';\r\nimport wasm from './Wasm';\r\n\r\nconst wasm_url = document.getElementById('wasm').getAttribute('src');\r\n\r\nconst logger = new Logger('log');\r\n\r\nconst importObj = {\r\n    module: {},\r\n    functions: {\r\n        '_Znaj': 'malloc',\r\n        '_Znwj': 'malloc'\r\n    }\r\n};\r\n\r\nconst arr = [1,10];\r\n\r\n(async () => {\r\n    const w = await wasm(wasm_url, importObj);\r\n\r\n    console.log(w._functions);\r\n    logger.log(arr, 'Маccив');\r\n    logger.log(w.call('_sum', [{array: arr, type: 'Int32'}, arr.length]), 'Сумма его элементов');\r\n\r\n    let new_arr = w.call('_duplicate_arr',\r\n        [{array: arr, type: 'Int32'}, arr.length],\r\n        {type: 'int32', length: arr.length * 2, to_array: false});\r\n    logger.log(new_arr, 'Новый массив возвращенный из C++ функции');\r\n    logger.log(w.call('_sum', [{array: new_arr, type: 'Int32'}, new_arr.length]), 'Сумма его элементов');\r\n\r\n    const matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]];\r\n    logger.log(matrix, 'Матрица');\r\n    logger.log(w.call('_sum_matrix', [{matrix: [[1, 2, 3], [4, 5, 6], [7, 8, 9]], type: 'Int32'}, 3, 3]), 'Сумма элементов матрицы');\r\n})();"]}